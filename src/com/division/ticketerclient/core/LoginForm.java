/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.division.ticketerclient.core;

import com.division.ticketerclient.config.ClientConfig;
import com.division.ticketerclient.config.Config;
import com.division.ticketerclient.crypto.SHA1;
import com.division.ticketerclient.net.NetCase;
import com.division.ticketerclient.net.Net_Framework;
import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author Evan
 */
public class LoginForm extends javax.swing.JFrame {

    /**
     * Creates new form LoginForm
     */
    protected Net_Framework netFrame = new Net_Framework();
    boolean connected = false;
    TicketPanel TP;
    Config tcfg;

    public LoginForm() {
        initComponents();
        this.getRootPane().setDefaultButton(CONN);
        SRVIP.requestFocusInWindow();
        ClientConfig cconfig = new ClientConfig();
        tcfg = cconfig.load();
        if (tcfg != null) {
            if (tcfg.isRemembered()) {
                USRN.setText(tcfg.getUsername());
                PSWD.setText(tcfg.getPassword());
                SRVIP.setText(tcfg.getHost());
                PORT.setText(tcfg.getPort());
                RMB.setSelected(tcfg.isRemembered());
            }
        }

    }

    public void ErrorUpdate(String er, Color color) {
        EER_LbL.setVisible(true);
        EER_LbL.setText(er);
        EER_LbL.setForeground(color);
        CONN.setEnabled(true);
        if (color == Color.RED) {
            CONN.setEnabled(true);
            CONN.setText("Sign in");
        } else if (color == Color.DARK_GRAY) {
            CONN.setEnabled(false);
            CONN.setText("Signing in...");
        }
    }

    private void initializeSocket(String connstring) {
        netFrame.connectToServer(connstring, NetCase.CONN, this);
    }

    public void setConnected(boolean val) {
        this.connected = val;
    }

    public void launchTicketPanel(Rank rank) {
        TP = new TicketPanel();
        TP.setStats(this, USRN.getText(), SRVIP.getText(), netFrame, rank);
        TP.setVisible(true);
        setVisible(false);
    }

    public TicketPanel getTicketPanel() {
        return TP;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        SRVIP = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        PORT = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        USRN = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        PSWD = new javax.swing.JPasswordField();
        CONN = new javax.swing.JButton();
        EER_LbL = new javax.swing.JLabel();
        RMB = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ticketer - Login");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                LoginForm_Closing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Welcome to Ticketer");

        jLabel2.setText("Server IP:");

        jLabel3.setText("Port:");

        PORT.setText("9184");

        jLabel4.setText("Username:");

        USRN.setToolTipText("Enter your ticketer username.");

        jLabel5.setText("Password:");

        CONN.setText("Connect");
        CONN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CONNActionPerformed(evt);
            }
        });

        EER_LbL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EER_LbL.setText(" ");
        EER_LbL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        RMB.setText("Remember Info");
        RMB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                RMBItemStateChanged(evt);
            }
        });
        RMB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RMBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(SRVIP, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(23, 23, 23))
                            .addComponent(PORT)))
                    .addComponent(USRN)
                    .addComponent(PSWD)
                    .addComponent(CONN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(EER_LbL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(RMB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(EER_LbL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SRVIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PORT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(USRN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PSWD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CONN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(RMB)
                .addContainerGap(117, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CONNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CONNActionPerformed
        if (!SRVIP.getText().equals("") && !USRN.getText().equals("") && !PORT.getText().equals("") && PSWD.getPassword() != null) {
            SHA1 sha1 = new SHA1();
            String pass = new String(PSWD.getPassword());
            String user = USRN.getText();
            String sha1pass = sha1.getHash(1000, pass + user);
            ErrorUpdate("Connecting...", Color.DARK_GRAY);
            initializeSocket(sha1pass + "%" + user);
        } else {
            ErrorUpdate("You are missing something...", Color.RED);
        }
        if (RMB.isSelected()) {
            tcfg.setHost(SRVIP.getText());
            tcfg.setPort(PORT.getText());
            tcfg.setPassword(new String(PSWD.getPassword()));
            tcfg.setUsername(USRN.getText());
            tcfg.setRemeber(true);
            ClientConfig cconfig = new ClientConfig();
            cconfig.save(tcfg);
        } else {
            ClientConfig cconfig = new ClientConfig();
            cconfig.save(new Config());
        }
    }//GEN-LAST:event_CONNActionPerformed

    private void LoginForm_Closing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_LoginForm_Closing
    }//GEN-LAST:event_LoginForm_Closing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
    }//GEN-LAST:event_formWindowClosed

    private void RMBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_RMBItemStateChanged
    }//GEN-LAST:event_RMBItemStateChanged

    private void RMBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RMBActionPerformed
        if (RMB.isSelected()) {
            Object[] options = {"OK", "CANCEL"};
            JOptionPane jop = new JOptionPane();
            int option = jop.showOptionDialog(this, "WARNING these options are stored in plain text. Click OK to continue.", "WARNING", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
            if (option != 0) {
                RMB.setSelected(false);
            } else {
                RMB.setSelected(true);
            }
        }
    }//GEN-LAST:event_RMBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new LoginForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CONN;
    private javax.swing.JLabel EER_LbL;
    public javax.swing.JTextField PORT;
    public javax.swing.JPasswordField PSWD;
    private javax.swing.JCheckBox RMB;
    public javax.swing.JTextField SRVIP;
    public javax.swing.JTextField USRN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
