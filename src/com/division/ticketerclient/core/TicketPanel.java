/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.division.ticketerclient.core;

import com.division.ticketerclient.net.NetCase;
import com.division.ticketerclient.net.Net_Framework;
import java.awt.event.ItemEvent;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Evan
 */
public class TicketPanel extends javax.swing.JFrame {

    private DefaultListModel tickList = new DefaultListModel();
    private DefaultListModel asgnList = new DefaultListModel();
    private String openTicket = "";
    private Rank rank;
    LoginForm LF;
    Net_Framework netFrame;
    SUPanel suPanel = new SUPanel();

    /**
     * Creates new form TicketPanel
     */
    public TicketPanel() {
        initComponents();
        TickList.setModel(tickList);
        ASGN_list.setModel(asgnList);
        this.getRootPane().setDefaultButton(SND);
        pack();
    }

    public void setStats(LoginForm instance, String username, String server, Net_Framework netFrame, Rank rank) {
        LF = instance;
        this.rank = rank;
        setTitle("Logged in as: " + username + "@" + server);
        this.netFrame = netFrame;
        tickList.removeAllElements();
        asgnList.removeAllElements();
        Convo_TXT.setText("");
        netFrame.sendToServer("", NetCase.LRQ);
    }

    public void sendAssignment(String username) {
        String title = "New Assignment!";
        String msg = "You have a new assigment.";
        netFrame.sendToServer(username + "%" + title + "%" + msg, NetCase.NOTIF);

    }

    public void addOpenTicket(String ticketid) {
        if (!tickList.contains(ticketid)) {
            if (!ticketid.equals("")) {
                tickList.addElement(ticketid);
            }
        }
    }

    public void removeOpenTicket(String ticketid) {
        tickList.removeElement(ticketid);
    }

    public void addAsgnTicket(String ticketid) {
        if (!asgnList.contains(ticketid)) {
            if (!ticketid.equals("")) {
                asgnList.addElement(ticketid);
            }
        }
    }

    public void removeAsgnTicket(String ticketid) {
        asgnList.removeElement(ticketid);
    }

    public void createNotification(String title, String notif) {
        JOptionPane.showMessageDialog(this, notif, title, JOptionPane.INFORMATION_MESSAGE);
    }

    public void addToConvo(String convo) {
        if (!convo.equals("")) {
            Convo_TXT.append(convo + "\n");
            Convo_TXT.setCaretPosition(Convo_TXT.getDocument().getLength());
        }
    }

    public void setMessage(String message) {
        MSGTXT.setText(message);
    }

    public void setPlayer(String player) {
        PTXT.setText(player);
    }

    public void setOnline(String on) {
        ON_TXT.setText(on);
        if (on.equalsIgnoreCase("false")) {
            SND.setEnabled(false);
        } else {
            SND.setEnabled(true);
        }
    }

    public void setStatus(String status) {
        STATUS.setSelectedItem(status);
    }

    public void setSubject(String subject) {
        SUB_TXT.setText(subject);
    }
    
    public void setComment(String comment){
        COMM.setText(comment);
    }

    public String getOpenTicket() {
        return openTicket;
    }

    public Rank getRank() {
        return rank;
    }

    public SUPanel getSUPanel() {
        return suPanel;
    }

    public void clearTickList() {
        tickList.clear();
    }

    public void clearASGNList() {
        asgnList.clear();
    }

    public void enableControls() {
        SNDI.setEnabled(true);
        SNDGB.setEnabled(true);
        if (rank != Rank.SUPERUSER) {
            FLAG.setEnabled(true);
        }
    }

    public void disableControls() {
        SNDI.setEnabled(false);
        SNDGB.setEnabled(false);
        if (rank != Rank.SUPERUSER) {
            FLAG.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TickList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Convo_TXT = new javax.swing.JTextArea();
        SUB_TXT = new javax.swing.JTextField();
        PTXT = new javax.swing.JTextField();
        SUB = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        SMSG_TXT = new javax.swing.JTextField();
        SND = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        ON_TXT = new javax.swing.JTextField();
        SNDI = new javax.swing.JButton();
        SNDGB = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        MSGTXT = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ASGN_list = new javax.swing.JList();
        jLabel6 = new javax.swing.JLabel();
        SUP = new javax.swing.JButton();
        STATUS = new javax.swing.JComboBox();
        FLAG = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        COMM = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        RFRSH = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        TickList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        TickList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TickListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TickList);

        jLabel1.setText("Tickets:");

        Convo_TXT.setColumns(20);
        Convo_TXT.setEditable(false);
        Convo_TXT.setLineWrap(true);
        Convo_TXT.setRows(5);
        jScrollPane2.setViewportView(Convo_TXT);

        SUB_TXT.setEditable(false);
        SUB_TXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SUB_TXTActionPerformed(evt);
            }
        });

        PTXT.setEditable(false);

        SUB.setText("Subject: ");

        jLabel2.setText("Player: ");

        jLabel3.setText("Conversation");

        SMSG_TXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SMSG_TXTActionPerformed(evt);
            }
        });

        SND.setText("Send");
        SND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SNDActionPerformed(evt);
            }
        });

        jLabel4.setText("Online:");

        ON_TXT.setEditable(false);
        ON_TXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ON_TXTActionPerformed(evt);
            }
        });

        SNDI.setText("Start Conversation");
        SNDI.setEnabled(false);
        SNDI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SNDIActionPerformed(evt);
            }
        });

        SNDGB.setText("End Conversation");
        SNDGB.setEnabled(false);
        SNDGB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SNDGBActionPerformed(evt);
            }
        });

        MSGTXT.setColumns(20);
        MSGTXT.setEditable(false);
        MSGTXT.setRows(5);
        jScrollPane3.setViewportView(MSGTXT);

        jLabel5.setText("Message:");

        ASGN_list.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        ASGN_list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ASGN_listMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(ASGN_list);

        jLabel6.setText("Assignments:");

        SUP.setText("Super User Panel");
        SUP.setEnabled(false);
        SUP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SUPActionPerformed(evt);
            }
        });

        STATUS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "OPEN", "ACTIVE", "CLOSED", "PENDING" }));
        STATUS.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                STATUSItemStateChanged(evt);
            }
        });
        STATUS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                STATUSActionPerformed(evt);
            }
        });

        FLAG.setText("Flag for Higher Rank");
        FLAG.setEnabled(false);
        FLAG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FLAGActionPerformed(evt);
            }
        });

        jButton1.setText("Claim Ticket");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setText("Set Ticket Status:");

        jLabel8.setText("Comment:");

        RFRSH.setText("Refresh");
        RFRSH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RFRSHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(RFRSH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SMSG_TXT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SND))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SNDI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(FLAG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SNDGB, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                            .addComponent(SUP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(COMM, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7)
                            .addComponent(STATUS, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(154, 154, 154)
                                    .addComponent(jLabel4))
                                .addComponent(SUB_TXT, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(PTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(ON_TXT)))
                            .addComponent(SUB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(RFRSH))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ON_TXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SUB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SUB_TXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SMSG_TXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SND))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SNDI)
                            .addComponent(SNDGB)
                            .addComponent(COMM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SUP)
                            .addComponent(FLAG)
                            .addComponent(STATUS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SUB_TXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SUB_TXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SUB_TXTActionPerformed

    private void SMSG_TXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SMSG_TXTActionPerformed
        SND.doClick();
    }//GEN-LAST:event_SMSG_TXTActionPerformed

    private void ON_TXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ON_TXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ON_TXTActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        LF.setVisible(true);
        netFrame.sendToServer(null, NetCase.DC);
        netFrame.setActive(false);
        try {
            netFrame.getConnection().close();
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_formWindowClosing

    private void TickListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TickListMouseClicked
        if (evt.getClickCount() >= 2) {
            if (!openTicket.equalsIgnoreCase("" + TickList.getSelectedValue())) {
                openTicket = "" + TickList.getSelectedValue();
                ASGN_list.clearSelection();
                netFrame.sendToServer(openTicket, NetCase.PINFO);
                TickList.clearSelection();
                Convo_TXT.setText("");
            }
        }
    }//GEN-LAST:event_TickListMouseClicked

    private void SUPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SUPActionPerformed

        suPanel.setVisible(true);
        suPanel.setStats(LF, this, netFrame);
    }//GEN-LAST:event_SUPActionPerformed

    private void ASGN_listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ASGN_listMouseClicked
        if (evt.getClickCount() >= 2) {
            if (!openTicket.equalsIgnoreCase("" + ASGN_list.getSelectedValue())) {
                openTicket = "" + ASGN_list.getSelectedValue();
                TickList.clearSelection();
                netFrame.sendToServer(openTicket, NetCase.PINFO);
                ASGN_list.clearSelection();
                Convo_TXT.setText("");
            }
        }
    }//GEN-LAST:event_ASGN_listMouseClicked

    private void SNDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SNDActionPerformed
        if (!PTXT.getText().equals("")) {
            if (!ON_TXT.getText().equals("false")) {
                if (SMSG_TXT.getDocument().getLength() > 0) {
                    if (!SMSG_TXT.getText().substring(0, 1).equals("/")) {
                        if (!SMSG_TXT.getText().equals("") || !SMSG_TXT.getText().equals(" ")) {
                            addToConvo(LF.USRN.getText() + ": " + SMSG_TXT.getText());
                            netFrame.sendToServer(PTXT.getText() + "%" + SMSG_TXT.getText(), NetCase.CVO);
                            SMSG_TXT.setText("");
                        }
                    } else {
                        if (rank == Rank.SYSTEM || rank == Rank.SUPERUSER) {
                            String cmd = SMSG_TXT.getText().replace("/", "");
                            netFrame.sendToServer(cmd, NetCase.CMD);
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_SNDActionPerformed

    private void SNDGBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SNDGBActionPerformed
        netFrame.sendToServer(PTXT.getText(), NetCase.CVOE);
    }//GEN-LAST:event_SNDGBActionPerformed

    private void SNDIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SNDIActionPerformed
        netFrame.sendToServer(PTXT.getText(), NetCase.CVOS);
    }//GEN-LAST:event_SNDIActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!asgnList.contains(openTicket)) {
            netFrame.sendToServer(openTicket + "%" + LF.USRN.getText(), NetCase.UASGN);
            createNotification("Ticket Claimed!", "You have claimed this ticket.");
        } else {
            createNotification("Already Claimed", "You have already claimed this ticket.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void STATUSItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_STATUSItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (STATUS.getSelectedItem() != null) {
                String status = (String) STATUS.getSelectedItem();
                if (status != null) {
                    netFrame.sendToServer(openTicket + "%" + status, NetCase.USTATUS);
                    netFrame.sendToServer("", NetCase.LRQ);
                }
                if (STATUS.getSelectedItem().toString().equalsIgnoreCase("active")) {
                    enableControls();
                } else {
                    disableControls();
                }
            }
        }
    }//GEN-LAST:event_STATUSItemStateChanged

    private void STATUSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_STATUSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_STATUSActionPerformed

    private void FLAGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FLAGActionPerformed
        String MSG = JOptionPane.showInputDialog(this, "Enter a message:", "FlagMessage", JOptionPane.PLAIN_MESSAGE);
        netFrame.sendToServer(openTicket + "%" + MSG + "%" + 1, NetCase.UFLG);
        netFrame.sendToServer(openTicket + "%PENDING", NetCase.USTATUS);
        createNotification("Notified!", "A higher rank has been notified.");
    }//GEN-LAST:event_FLAGActionPerformed

    private void RFRSHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RFRSHActionPerformed
        netFrame.sendToServer("", NetCase.LRQ);
    }//GEN-LAST:event_RFRSHActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicketPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicketPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicketPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicketPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TicketPanel().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList ASGN_list;
    private javax.swing.JTextField COMM;
    private javax.swing.JTextArea Convo_TXT;
    private javax.swing.JButton FLAG;
    private javax.swing.JTextArea MSGTXT;
    private javax.swing.JTextField ON_TXT;
    private javax.swing.JTextField PTXT;
    private javax.swing.JButton RFRSH;
    private javax.swing.JTextField SMSG_TXT;
    public javax.swing.JButton SND;
    private javax.swing.JButton SNDGB;
    private javax.swing.JButton SNDI;
    private javax.swing.JComboBox STATUS;
    private javax.swing.JLabel SUB;
    private javax.swing.JTextField SUB_TXT;
    public javax.swing.JButton SUP;
    private javax.swing.JList TickList;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
